// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: secretflow/spec/v1/evaluation.proto

package com.secretflow.spec.v1;

public interface NodeEvalParamOrBuilder extends
    // @@protoc_insertion_point(interface_extends:secretflow.spec.v1.NodeEvalParam)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Domain of the component.
   * </pre>
   *
   * <code>string domain = 1;</code>
   * @return The domain.
   */
  java.lang.String getDomain();
  /**
   * <pre>
   * Domain of the component.
   * </pre>
   *
   * <code>string domain = 1;</code>
   * @return The bytes for domain.
   */
  com.google.protobuf.ByteString
      getDomainBytes();

  /**
   * <pre>
   * Name of the component.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name of the component.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Version of the component.
   * </pre>
   *
   * <code>string version = 3;</code>
   * @return The version.
   */
  java.lang.String getVersion();
  /**
   * <pre>
   * Version of the component.
   * </pre>
   *
   * <code>string version = 3;</code>
   * @return The bytes for version.
   */
  com.google.protobuf.ByteString
      getVersionBytes();

  /**
   * <pre>
   * The path of attributes.
   * The attribute path for a TableAttrDef is
   * `(input&#92;|output)/(IoDef name)/(TableAttrDef name)(/(column name)(/(extra
   * attributes))?)?`.
   * </pre>
   *
   * <code>repeated string attr_paths = 4;</code>
   * @return A list containing the attrPaths.
   */
  java.util.List<java.lang.String>
      getAttrPathsList();
  /**
   * <pre>
   * The path of attributes.
   * The attribute path for a TableAttrDef is
   * `(input&#92;|output)/(IoDef name)/(TableAttrDef name)(/(column name)(/(extra
   * attributes))?)?`.
   * </pre>
   *
   * <code>repeated string attr_paths = 4;</code>
   * @return The count of attrPaths.
   */
  int getAttrPathsCount();
  /**
   * <pre>
   * The path of attributes.
   * The attribute path for a TableAttrDef is
   * `(input&#92;|output)/(IoDef name)/(TableAttrDef name)(/(column name)(/(extra
   * attributes))?)?`.
   * </pre>
   *
   * <code>repeated string attr_paths = 4;</code>
   * @param index The index of the element to return.
   * @return The attrPaths at the given index.
   */
  java.lang.String getAttrPaths(int index);
  /**
   * <pre>
   * The path of attributes.
   * The attribute path for a TableAttrDef is
   * `(input&#92;|output)/(IoDef name)/(TableAttrDef name)(/(column name)(/(extra
   * attributes))?)?`.
   * </pre>
   *
   * <code>repeated string attr_paths = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the attrPaths at the given index.
   */
  com.google.protobuf.ByteString
      getAttrPathsBytes(int index);

  /**
   * <pre>
   * The value of the attribute.
   * Must match attr_paths.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.Attribute attrs = 5;</code>
   */
  java.util.List<com.secretflow.spec.v1.Attribute> 
      getAttrsList();
  /**
   * <pre>
   * The value of the attribute.
   * Must match attr_paths.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.Attribute attrs = 5;</code>
   */
  com.secretflow.spec.v1.Attribute getAttrs(int index);
  /**
   * <pre>
   * The value of the attribute.
   * Must match attr_paths.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.Attribute attrs = 5;</code>
   */
  int getAttrsCount();
  /**
   * <pre>
   * The value of the attribute.
   * Must match attr_paths.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.Attribute attrs = 5;</code>
   */
  java.util.List<? extends com.secretflow.spec.v1.AttributeOrBuilder> 
      getAttrsOrBuilderList();
  /**
   * <pre>
   * The value of the attribute.
   * Must match attr_paths.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.Attribute attrs = 5;</code>
   */
  com.secretflow.spec.v1.AttributeOrBuilder getAttrsOrBuilder(
      int index);

  /**
   * <pre>
   * The input data, the order of inputs must match inputs in ComponentDef.
   * NOTE: Names of DistData doesn't need to match those of inputs in
   * ComponentDef definition.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.DistData inputs = 6;</code>
   */
  java.util.List<com.secretflow.spec.v1.DistData> 
      getInputsList();
  /**
   * <pre>
   * The input data, the order of inputs must match inputs in ComponentDef.
   * NOTE: Names of DistData doesn't need to match those of inputs in
   * ComponentDef definition.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.DistData inputs = 6;</code>
   */
  com.secretflow.spec.v1.DistData getInputs(int index);
  /**
   * <pre>
   * The input data, the order of inputs must match inputs in ComponentDef.
   * NOTE: Names of DistData doesn't need to match those of inputs in
   * ComponentDef definition.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.DistData inputs = 6;</code>
   */
  int getInputsCount();
  /**
   * <pre>
   * The input data, the order of inputs must match inputs in ComponentDef.
   * NOTE: Names of DistData doesn't need to match those of inputs in
   * ComponentDef definition.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.DistData inputs = 6;</code>
   */
  java.util.List<? extends com.secretflow.spec.v1.DistDataOrBuilder> 
      getInputsOrBuilderList();
  /**
   * <pre>
   * The input data, the order of inputs must match inputs in ComponentDef.
   * NOTE: Names of DistData doesn't need to match those of inputs in
   * ComponentDef definition.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.DistData inputs = 6;</code>
   */
  com.secretflow.spec.v1.DistDataOrBuilder getInputsOrBuilder(
      int index);

  /**
   * <pre>
   * The output data uris, the order of output_uris must match outputs in
   * ComponentDef.
   * </pre>
   *
   * <code>repeated string output_uris = 7;</code>
   * @return A list containing the outputUris.
   */
  java.util.List<java.lang.String>
      getOutputUrisList();
  /**
   * <pre>
   * The output data uris, the order of output_uris must match outputs in
   * ComponentDef.
   * </pre>
   *
   * <code>repeated string output_uris = 7;</code>
   * @return The count of outputUris.
   */
  int getOutputUrisCount();
  /**
   * <pre>
   * The output data uris, the order of output_uris must match outputs in
   * ComponentDef.
   * </pre>
   *
   * <code>repeated string output_uris = 7;</code>
   * @param index The index of the element to return.
   * @return The outputUris at the given index.
   */
  java.lang.String getOutputUris(int index);
  /**
   * <pre>
   * The output data uris, the order of output_uris must match outputs in
   * ComponentDef.
   * </pre>
   *
   * <code>repeated string output_uris = 7;</code>
   * @param index The index of the value to return.
   * @return The bytes of the outputUris at the given index.
   */
  com.google.protobuf.ByteString
      getOutputUrisBytes(int index);

  /**
   * <pre>
   * If not empty:
   * 1. Component will try to save checkpoint during training if the component
   * supports it.
   * 2. Component will try to reload checkpoint when starting to continue the
   * previous training. If the checkpoint does not exist or cannot be loaded,
   * training will be starting from scratch.
   * </pre>
   *
   * <code>string checkpoint_uri = 8;</code>
   * @return The checkpointUri.
   */
  java.lang.String getCheckpointUri();
  /**
   * <pre>
   * If not empty:
   * 1. Component will try to save checkpoint during training if the component
   * supports it.
   * 2. Component will try to reload checkpoint when starting to continue the
   * previous training. If the checkpoint does not exist or cannot be loaded,
   * training will be starting from scratch.
   * </pre>
   *
   * <code>string checkpoint_uri = 8;</code>
   * @return The bytes for checkpointUri.
   */
  com.google.protobuf.ByteString
      getCheckpointUriBytes();
}
