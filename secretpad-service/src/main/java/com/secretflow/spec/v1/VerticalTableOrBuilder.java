// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: secretflow/spec/v1/data.proto

package com.secretflow.spec.v1;

public interface VerticalTableOrBuilder extends
    // @@protoc_insertion_point(interface_extends:secretflow.spec.v1.VerticalTable)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The vertical partitioned slices' schema.
   * Must match data_refs in the parent DistData message.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.TableSchema schemas = 1;</code>
   */
  java.util.List<com.secretflow.spec.v1.TableSchema> 
      getSchemasList();
  /**
   * <pre>
   * The vertical partitioned slices' schema.
   * Must match data_refs in the parent DistData message.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.TableSchema schemas = 1;</code>
   */
  com.secretflow.spec.v1.TableSchema getSchemas(int index);
  /**
   * <pre>
   * The vertical partitioned slices' schema.
   * Must match data_refs in the parent DistData message.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.TableSchema schemas = 1;</code>
   */
  int getSchemasCount();
  /**
   * <pre>
   * The vertical partitioned slices' schema.
   * Must match data_refs in the parent DistData message.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.TableSchema schemas = 1;</code>
   */
  java.util.List<? extends com.secretflow.spec.v1.TableSchemaOrBuilder> 
      getSchemasOrBuilderList();
  /**
   * <pre>
   * The vertical partitioned slices' schema.
   * Must match data_refs in the parent DistData message.
   * </pre>
   *
   * <code>repeated .secretflow.spec.v1.TableSchema schemas = 1;</code>
   */
  com.secretflow.spec.v1.TableSchemaOrBuilder getSchemasOrBuilder(
      int index);

  /**
   * <pre>
   * If -1, the number is unknown.
   * </pre>
   *
   * <code>int64 line_count = 2;</code>
   * @return The lineCount.
   */
  long getLineCount();
}
