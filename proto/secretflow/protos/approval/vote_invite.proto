// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package secretflow.approval;

option java_package = "org.secretflow.proto.approval";


enum Action {
  APPROVE = 0;
  REJECT = 1;
}
message Invite {
  //unique vote id
  string vote_request_id = 1;

  //participant
  string voter = 2;

  Action action = 3;


  /*------------ this is split line , we only transfer below content -------------------- **/
  // "cert_chain" :["cacertxxx","tempcertxxx"]
  repeated string cert_chain = 4;

  //from 1~3 struct base64
  /**
  {
   "vote_request_id": "xxx",
   "voter": "xxx",
   "action": "xxx",
   "resource_uri":"xxxx"
  }
   */
  string body = 5;

  //signature for 5 and concat vote_request_signature in vote_request.proto;
  /**
    eg:
      body = "this is base64 body"
      vote_request_signature = "this is vote_request_signature in vote_request.proto"
      voter_signature = sign(body + vote_request_signature);
   */
  string voter_signature = 6;

}

